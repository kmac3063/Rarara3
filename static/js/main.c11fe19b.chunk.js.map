{"version":3,"sources":["panels/Home.js","img/persik.png","panels/WelcomeScreen.js","panels/Friend.js","App.js","index.js"],"names":["Home","id","callFriend","go","fetchedUser","onClick","before","WelcomeScreen","user","icon","header","first_name","action","size","data-to","Friend","friend","meShacking","setMeShacking","coord","speed","useState","friendShacking","setFriendShacking","friendThere","setFriendThere","useEffect","getFriendInfoTimer","setInterval","Promise","resolve","reject","setTimeout","friend_id","Math","random","shake","then","data","sendMyInfoTimer","prev","requestOptions","method","headers","body","JSON","stringify","console","log","fetch","clearTimeout","left","mode","style","display","stretched","marginRight","last_name","margin","flexDirection","alignItems","justifyContent","textAlign","padding","fill","App","allowedList","activePanel","setActivePanel","setUser","popout","setPopout","setScheme","setFriend","setSpeed","x","y","z","setCoord","a","bridge","send","subscribe","detail","type","schemeAttribute","document","createAttribute","value","attributes","setNamedItem","speed1","sqrt","timer","coord1","coord2","fetchData","e","currentTarget","dataset","to","users","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c11fe19b.chunk.js","sourcesContent":["import React from 'react';\n\nimport {Cell, Panel, PanelHeader} from '@vkontakte/vkui';\nimport {Icon28NarrativeOutline} from \"@vkontakte/icons\";\n\nconst Home = ({id, go, fetchedUser, callFriend}) => {\n    return <Panel id={id}>\n        <PanelHeader>Выбирай друга</PanelHeader>\n\n        <Cell onClick={callFriend} before={<Icon28NarrativeOutline/>}>\n            Выбрать друга\n        </Cell>\n    </Panel>\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from \"react\";\r\nimport {Button, Group, Panel, PanelHeader, PanelHeaderBack, Placeholder} from \"@vkontakte/vkui\";\r\nimport persik from \"../img/persik.png\";\r\nimport {Icon56UsersOutline} from \"@vkontakte/icons\";\r\n\r\nconst WelcomeScreen = ({id, fetchedUser, go}) => {\r\n    const getName = (user) => {\r\n        if (user == null || user.first_name == null)\r\n            return \"Приятель\"\r\n        return fetchedUser.first_name\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            {/*<PanelHeader right={<Avatar size={36} />}>Panel 1</PanelHeader>*/}\r\n            <Group>\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline />}\r\n                    header={\"Приветствуем, \" + getName(fetchedUser) + \"!\"}\r\n                    action={<Button size=\"m\" onClick={go} data-to=\"Home\">Перейти к списку друзей</Button>}\r\n                >\r\n                    Приложение разработано в рамках финала хакатона.\r\n                </Placeholder>\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default WelcomeScreen;","import React, {useEffect, useState} from 'react';\n\nimport {\n    Avatar,\n    Button,\n    Cell,\n    Div,\n    Group,\n    Header,\n    Panel,\n    PanelHeader,\n    PanelHeaderBack,\n    Placeholder,\n    Separator\n} from '@vkontakte/vkui';\nimport {Icon56CakeCircleFillRaspberryPink, Icon56Fire, Icon56FireOutline} from '@vkontakte/icons';\n\nconst Friend = ({id, go, fetchedUser, friend, meShacking, coord, speed, setMeShacking}) => {\n    const [friendShacking, setFriendShacking] = useState(false)\n    const [friendThere, setFriendThere] = useState(true)\n\n    useEffect(() => {\n        const getFriendInfoTimer = setInterval(() => {\n            // fetch('https://api.npms.io/v2/search?id=' + fetchedUser.id)\n            //     .then(response => response.json())\n            new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    resolve({friend_id: Math.random() < 0.8 ? 0 : 1, shake: Math.random() < 0.5});\n                }, 300)\n            })\n                .then(data => {\n                    setFriendThere(() => {\n                        return data.friend_id === fetchedUser.id\n                    })\n                    setFriendShacking(() => {\n                        return data.shake\n                    })\n                })\n        }, 500);\n\n        const sendMyInfoTimer = setInterval(() => {\n            setMeShacking((prev) => {\n                if (fetchedUser === null && friend === null)\n                    return prev\n                const requestOptions = {\n                    method: 'PUT',\n                    headers: {'Content-Type': 'application/json'},\n                    body: JSON.stringify({id: fetchedUser.id, friend_id: friend.id, shake: prev})\n                };\n                console.log(\"body: \" + JSON.stringify({id: fetchedUser.id, friend_id: friend.id, shake: prev}))\n                fetch('https://jsonplaceholder.typicode.com/posts/1', requestOptions)\n                return prev\n            })\n        }, 500);\n\n        return () => {\n            console.log(\"unmount\")\n            clearTimeout(getFriendInfoTimer);\n            clearTimeout(sendMyInfoTimer)\n\n            if (fetchedUser !== null) {\n                const requestOptions = {\n                    method: 'PUT',\n                    headers: {'Content-Type': 'application/json'},\n                    body: JSON.stringify({id: fetchedUser.id, friend_id: null, shake: false})\n                };\n                fetch('https://jsonplaceholder.typicode.com/posts/1', requestOptions)\n            }\n\n        }\n    }, []);\n\n    return <Panel id={id}>\n        <PanelHeader\n            left={<PanelHeaderBack onClick={go} data-to={'Home'}/>}\n        >Тет-а-тет</PanelHeader>\n        {/*        <Cell>x: {coord.x}</Cell>\n        <Cell>y: {coord.y}</Cell>\n        <Cell>z: {coord.z}</Cell>\n        <Cell>speed: {speed}</Cell>*/}\n        <Group header={<Header mode=\"secondary\">Вы</Header>}>\n            <Div style={{display: 'flex'}}>\n                <Button size=\"l\" stretched mode=\"commerce\" style={{marginRight: 8}}>Вы в тет-а-тет</Button>\n                {meShacking ?\n                    <Button size=\"l\" stretched mode=\"commerce\">Вы трясете</Button>\n                    : <Button size=\"l\" stretched mode=\"secondary\">Вы не трясете</Button>\n                }\n            </Div>\n        </Group>\n        <Group header={<Header\n            mode=\"secondary\">{(friend ? friend.first_name : \"...\") + \" \" + (friend ? friend.last_name : \"\")}</Header>}>\n            <Div style={{display: 'flex'}}>\n                {friendThere ?\n                    <Button size=\"l\" stretched mode=\"commerce\" style={{marginRight: 8}}>В тет-а-тет</Button>\n                    : <Button size=\"l\" stretched mode=\"secondary\" style={{marginRight: 8}}>Не в тет-а-тет</Button>\n                }\n                {friendShacking ?\n                    <Button size=\"l\" stretched mode=\"commerce\">Трясет</Button>\n                    : <Button size=\"l\" stretched mode=\"secondary\">Не трясет</Button>\n                }\n            </Div>\n        </Group>\n        <Separator/>\n        {meShacking && friendThere && friendShacking ?\n            <Div style={{\n                margin: 0,\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'center',\n                textAlign: 'center',\n                padding: 32,\n            }}>\n                <Avatar><Icon56CakeCircleFillRaspberryPink/></Avatar>\n\n                <Cell>Вы трясете одновременно!</Cell>\n\n                <Avatar><Icon56CakeCircleFillRaspberryPink/></Avatar>\n            </Div>\n            : <Placeholder\n                icon={meShacking ? <Icon56Fire fill={\"DC143C\"}/> : <Icon56FireOutline fill={\"DC143C\"}/>}\n                header=\"Трясьти нужно сильно!\"\n            >\n            </Placeholder>}\n\n    </Panel>\n}\n\nexport default Friend;\n","import React, {useEffect, useState} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {AdaptivityProvider, AppRoot, ScreenSpinner, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport WelcomeScreen from \"./panels/WelcomeScreen\";\nimport Friend from \"./panels/Friend\";\n\nconst App = (allowedList1 = allowedList) => {\n    const [activePanel, setActivePanel] = useState('WelcomeScreen');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n    const [scheme, setScheme] = useState(null)\n    const [friend, setFriend] = useState(null)\n    const [meShacking, setMeShacking] = useState(null)\n    const [speed, setSpeed] = useState(0)\n\n    const [coord, setCoord] = useState({x: 0, y: 0, z: 0})\n    const [mAccel, setMAccel] = useState(10)\n\n    const allowedList = [{text: \".org\", id: 4}, {text: \".ru\", id: 5}, {text: \"aa\", id: 6}]\n\n    useEffect(() => {\n        bridge.subscribe(({detail: {type, data}}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme')\n                // schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                schemeAttribute.value = 'client_light';\n                setScheme(schemeAttribute.value)\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n\n            if (type === 'VKWebAppAccelerometerChanged') {\n                const x = data.x\n                const y = data.y\n                const z = data.z\n\n                let speed1 = Math.sqrt(x * x + y * y + z * z)\n                setMeShacking(() => {\n                    return speed1 > 11\n                })\n\n                setSpeed(() => speed1)\n                setCoord(() => {\n                    return {x: x, y: y, z: z}\n                })\n            }\n        });\n\n        async function fetchData() {\n            setPopout(null);\n            const user = await bridge.send('VKWebAppGetUserInfo')\n            bridge.send(\"VKWebAppAccelerometerStart\", {\"refresh_rate\": 200});\n            setUser(user);\n        }\n\n        let timer = setInterval(() => {\n            const coord1 = coord\n            let coord2 = null\n            setTimeout(() => {\n                coord2 = coord\n                if (coord1.x === coord2.x && coord1.y === coord2.y && coord1.z === coord2.z) {\n                    bridge.send(\"VKWebAppAccelerometerStart\", {\"refresh_rate\": 200});\n                }\n            }, 500)\n        }, 1000)\n\n        async function fakeAcc() {\n            timer = setInterval(() => {\n                const data = {x: 0 + Math.random() * 5, y: 1 - Math.random() * 5, z: 9 + Math.random() * 5}\n                const x = data.x\n                const y = data.y\n                const z = data.z\n                let speed1 = Math.sqrt(x * x + y * y + z * z)\n                setMeShacking(() => {\n                    return speed1 > 11\n                })\n\n                setSpeed(() => speed1)\n                setCoord(() => {\n                    return {x: x, y: y, z: z}\n                })\n            }, 300)\n        }\n\n        fetchData();\n        // fakeAcc();\n\n        return () => {\n            if (timer !== null) {\n                clearTimeout(timer)\n            }\n        }\n    }, []);\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    const callFriend = async () => {\n        bridge.send('VKWebAppGetFriends', {}).then(data => {\n            setActivePanel(() => 'Friend')\n            setFriend(() => data.users[0])\n        })\n\n        // let a = {\n        //     \"id\": 2884043,\n        //     \"first_name\": \"Albert\",\n        //     \"last_name\": \"Usmanov\",\n        //     \"sex\": 2,\n        //     \"photo_200\": \"...\"\n        // }\n        //\n        // setFriend(() => a)\n        // setActivePanel(() => 'Friend')\n        // setUser({id: 0})\n    }\n\n    return (\n        <AdaptivityProvider>\n            <AppRoot>\n                <View activePanel={activePanel} popout={popout}>\n                    <WelcomeScreen id='WelcomeScreen' fetchedUser={fetchedUser} go={go}/>\n                    <Home id='Home'\n                          fetchedUser={fetchedUser} go={go}\n                          callFriend={callFriend}/>\n                    <Friend id='Friend'\n                            fetchedUser={fetchedUser} go={go}\n                            friend={friend}\n                            meShacking={meShacking}\n                            setMeShacking={setMeShacking}\n                            coord={coord}\n                            speed={speed}/>\n                </View>\n            </AppRoot>\n        </AdaptivityProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}